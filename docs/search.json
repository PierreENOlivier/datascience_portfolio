[{"path":"index.html","id":"about-me","chapter":"About Me","heading":"About Me","text":"","code":""},{"path":"index.html","id":"who-i-am","chapter":"About Me","heading":"Who I am","text":"R Markdown format used publishing markdown documents GitHub. click Knit button R code chunks run markdown file (.md) suitable publishing GitHub generated.","code":""},{"path":"index.html","id":"my-journey-in-data-science","chapter":"About Me","heading":"My journey in Data Science","text":"","code":""},{"path":"projects-in-this-portfolio.html","id":"projects-in-this-portfolio","chapter":"Projects in this portfolio","heading":"Projects in this portfolio","text":"provide short description project included portfolio.","code":""},{"path":"projects-in-this-portfolio.html","id":"project-1---analysis-of-stock-market-data-and-construction-of-custom-stock-indexes","chapter":"Projects in this portfolio","heading":"Project 1 - Analysis of stock market data and construction of custom stock indexes","text":"short project extract historic stock price data, build fictional indexes, play around time series.","code":""},{"path":"projects-in-this-portfolio.html","id":"project-2---how-to-build-simpler-network-models-using-unsupervised-machine-learning","chapter":"Projects in this portfolio","heading":"Project 2 - How to build simpler network models using unsupervised machine learning","text":"consequent project combines network analysis machine learning simplify complex network.","code":""},{"path":"projects-in-this-portfolio.html","id":"file-structure-of-projects","chapter":"Projects in this portfolio","heading":"File structure of projects","text":"project built common structure illustrated .Files associated specific project identified ID start file name.Within project, file organized along data pipeline.File structure portfolio ","code":""},{"path":"analysis-of-stock-market-data-and-construction-of-stock-index.html","id":"analysis-of-stock-market-data-and-construction-of-stock-index","chapter":"Part 1 Analysis of stock market data and construction of stock index","heading":"Part 1 Analysis of stock market data and construction of stock index","text":"","code":""},{"path":"analysis-of-stock-market-data-and-construction-of-stock-index.html","id":"description","chapter":"Part 1 Analysis of stock market data and construction of stock index","heading":"1.1 Description","text":"short project want explore type data familiar (.e. stock data) apply set techniques experience (.e. statistics time series analysis).\nextract stock prices major computer manufacturing companies, build fictional stock index, analyze fluctuations prices time.project relies R libraries extract stock data databases. , either use functions existing packages, build package, analyze stock data build custom stock index.","code":""},{"path":"analysis-of-stock-market-data-and-construction-of-stock-index.html","id":"goal","chapter":"Part 1 Analysis of stock market data and construction of stock index","heading":"1.2 Goal","text":"Analyze effect price fluctuations different types indexes, process market split.\n, ascribe constant arbitrary share amounts index component (see raw data) use historic data follow fluctuations market price.","code":""},{"path":"analysis-of-stock-market-data-and-construction-of-stock-index.html","id":"main-tasks","chapter":"Part 1 Analysis of stock market data and construction of stock index","heading":"1.3 Main tasks","text":"Download analyze stock prices selected componentsBuild custom indexesBuild package/library custom R functionsAnalyze market split","code":""},{"path":"data-preprocessing.html","id":"data-preprocessing","chapter":"Part 2 Data preprocessing","heading":"Part 2 Data preprocessing","text":"Tasks\n- [ ] Download daily close (unadjusted) prices selected components\n- [ ] Check missing values replace missing values\n- [ ] Save extracted data\n- [ ] Plot time series","code":""},{"path":"data-preprocessing.html","id":"setup-project-and-load-dependencies","chapter":"Part 2 Data preprocessing","heading":"2.1 Setup project and load dependencies","text":"package indexanalysis contains functions built simplify analysis.","code":"\n# install.packages('quantmod')\nif(!require(\"indexanalysis\", quietly = TRUE)){\n   setwd(package_dir);\n   devtools::install(\"indexanalysis\")\n   library(indexanalysis)\n  }else{library(indexanalysis) ; print(\"loaded\")}\nlibrary(tidyverse)\nlibrary(rlang)\nlibrary(roxygen2)\nlibrary(magrittr)\nlibrary(glue)\nlibrary(tsibble)\nlibrary(quantmod)\nlibrary(zoo)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(purrr)\nlibrary(furrr)\nlibrary(lubridate)\nlibrary(readr)"},{"path":"data-preprocessing.html","id":"download-price-data-from-databases","chapter":"Part 2 Data preprocessing","heading":"2.2 Download price data from databases","text":"","code":""},{"path":"data-preprocessing.html","id":"read-stock-component-parameters","chapter":"Part 2 Data preprocessing","heading":"2.2.1 Read stock component parameters","text":"selected 6 manufacturers: Apple, HP, Lenovo, Dell, Acer, Asus.\ninserted basic metadata component CSV file available raw data folder.","code":"\n\nindex_parameters <- read.csv(file.path(raw_data_dir, raw_data, \"notebook_index_parameters.csv\"),  \n                             header = T, \n                             sep = \",\")"},{"path":"data-preprocessing.html","id":"get-daily-close-prices-from-remote-sources","chapter":"Part 2 Data preprocessing","heading":"2.2.2 Get daily close prices from remote sources","text":"picked arbitrary period historic data carry analysis.","code":"\nsymbols <- index_parameters$Symbol\nstart_date = zoo::as.Date(\"2021-01-01\")\nend_date = zoo::as.Date(\"2021-04-01\")-1"},{"path":"data-preprocessing.html","id":"download-data-for-each-component-and-prepare-a-tibble","chapter":"Part 2 Data preprocessing","heading":"2.2.2.1 Download data for each component and prepare a tibble","text":"xts_finance_to_tibble fetch data return time series tidy format.","code":"\nall_price = c(\"Open\", \"Close\", \"High\", \"Low\", \"Volume\", \"Adjusted\")\n# keep_price = c(\"Close\")\nkeep_price = all_price\nplan(multisession, workers = length(symbols))\n# Fetch, filter, and format tables corresponding to each symbol\nprices_ts <- symbols %>%\nfuture_map_dfr(~indexanalysis::xts_finance_to_tibble(symbol = .x,\n                                    from = start_date,\n                                    to = (end_date+1) ))\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo \n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo \n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo \n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo \n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo \n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo"},{"path":"data-preprocessing.html","id":"preprocess-data-remove-complete-nas-and-impute-locf","chapter":"Part 2 Data preprocessing","heading":"2.2.3 Preprocess data: remove complete NAs and impute LOCF","text":"able compete index, need complete data selected components (.e. time step time series, component takes value).\ntable contains 1 row per component per time step. allow us see time steps (dates) missing component. need add gaps time series fill .filter :\n- dates none components contain data,\n- carry forward last observation (.e. LOCF) fill gaps.close open prices, another way take previous closing price next opening price.","code":"\ncheckpoint(prices_ts)\ncheckpoint(prices_ts, T)\n\nprices_ts %>%\n  as_tsibble(index = \"Date\", key = \"Key\") %>%\n  group_by_key() %>%\n  fill_gaps(.full = TRUE, .start = start_date, .end = end_date) %>%\n  pivot_longer(cols = all_of(keep_price), \n               names_to = \"price\", values_to = \"value\") %>%\n  mutate(isna = is.na(value)) %>%\n  arrange(Date, price) %>%\n  unite(\"Component_Price\", all_of(c(\"Key\", \"price\") ) , sep = \" \") %>%\n  ggplot(aes(x = Date, y = Component_Price, fill = isna ))+\n  geom_raster()+\n  scale_fill_manual(name = \"\",\n                    values = c(\"steelblue\", \"tomato3\"),\n                    labels = c(\"Present\", \"Missing\"))+\n  labs(x = \"Time\",\n       y = \"Component price\")\n## Calculate how many components contain NAs per date \nprices_ts <- prices_ts %>%\n  as_tibble%>%\n  select(-c(all_price[!(all_price %in% keep_price)] )) %>%\n  indexanalysis::pivot_prices_wider(nameS = \"Key\", keep_price)%>%\n  rowwise() %>%\n  mutate(NAs = sum(is.na(c_across(!Date)) ) )%>%\n  ungroup\n\n\n\n# LOCF\nprices_ts <- prices_ts %>%\n  # if n components x 6 prices contains NA, then no data for that day: skip the day\n  filter(NAs < length(symbols) * length(keep_price) ) %>%\n  arrange(Date) %>%\n  # For other days, LOCF\n  tidyr::fill(contains(keep_price), .direction = \"down\") %>%\n  select(-NAs)\n\n  \n  \n# Pivot longer  \nprices_ts <- prices_ts %>%\n  indexanalysis::pivot_prices_longer(symbols = symbols, separate = T)%>%\n  as_tsibble(., index = Date, key = c(\"Symbol\", \"Price.Type\" ))"},{"path":"data-preprocessing.html","id":"save-as-.csv","chapter":"Part 2 Data preprocessing","heading":"2.2.4 Save as .csv","text":"","code":"\nprices_ts_close <- prices_ts %>%\n  as_tibble%>%\n  filter(Price.Type == \"Close\")%>%\n  indexanalysis::pivot_prices_wider(nameS = c(\"Symbol\", \"Price.Type\"), valueS = \"Price\")\n\n\n\n\nreadr::write_csv(prices_ts_close, \n          file = file.path(clean_data_dir, project_dir, \"prices_ts.csv\" ) )\n\nreadr::write_csv(prices_ts, \n          file = file.path(clean_data_dir, project_dir, \"prices_ts_all.csv\" ) )"},{"path":"intro-foodweb.html","id":"intro-foodweb","chapter":"Part 3 Introduction to networks and food webs","heading":"Part 3 Introduction to networks and food webs","text":"might remember high school hearing food chain: herbivores eat\nplants, carnivores eat herbivores, successive chain food relationships. Relationships can represented data analysed using algorithms.food web extension concept. exists many species plants, herbivores, carnivores ecosystem, exists many interconnected food chains. food web represents interconnected food chains scale ecosystem can mapped network interactions species.Ecological networks, food webs, can represented mathematics matrix, converted graph, analysed using algorithms developed network graph theories.can imagine food webs social media networks, instead representing relationships friends, relationships enemies.first representation food web (Camerano, 1880) ","code":""},{"path":"intro-foodweb.html","id":"what-are-networks","chapter":"Part 3 Introduction to networks and food webs","heading":"3.1 What are networks?","text":"Networks graphical objects represents entities (e.g. people) nodes, connections nodes edges (links).Similarly, pairwise relationships biological ecological systems can represented nodes links:\n- nodes network represent ‘species’,\n- links represent ‘relationships’ species.food webs, links represents ‘eats ’ points predator.\nillustration , node (species) represented circle exception top predator—Atlantic cod, Gadus morhua; link represented arrow pointing prey predator.Graphical representation food web ","code":""},{"path":"intro-foodweb.html","id":"how-to-analyse-network-data","chapter":"Part 3 Introduction to networks and food webs","heading":"3.2 How to analyse network data","text":"can analyse networks according two schools: topological analysis flow analysis.Topological analysis focuses structure network:\n- nodes,\n- nodes connected ,\n- average, many relationships represented network,\n- relationships distributed across nodes,\n- social subgroups signaling communities,\n- …longer intro food webs study food webs, can read summary doctoral thesis.next section, build network graphs matrix forms, analyse , use methods statistics machine learning perform various data science tasks.Objective: want simplify network identifying nodes sharing similar characteristics.Solution: can classify nodes subgroups. Subgroups clusters nodes similar characteristics (e.g. belong taxonomy, eat similar food). However, know beforehand subgroups .","code":""},{"path":"data-preprocessing-1.html","id":"data-preprocessing-1","chapter":"Part 4 Data preprocessing","heading":"Part 4 Data preprocessing","text":"use food web network compiled Planque et al. (2014) available repository ‘Ecological Archives’ (ID E095-124).N.B. needed, dataset can retrieved :Journal “Ecology”,published Year “2014”,First author “Planque”,Data Paper (“Yes”).","code":""},{"path":"data-preprocessing-1.html","id":"load-dependencies","chapter":"Part 4 Data preprocessing","heading":"4.1 Load dependencies","text":"Load modules","code":"\n# rm(list = ls())\nlibrary(tidyverse)\nlibrary(magrittr)\n\nold_opts <- options() # preserve current preferences for after we exist the function\noptions(box.path = c(\"./scripts\", \n                       \"../scripts\",\n                       \"./scripts/box\",\n                       \"../scripts/box\") )\n  \nbox::use(box/modify_strings[locate_pattern, replace_pattern])\n# box::use(box/refresh_box[refresh])\n# refresh(\"box/modify_strings\")\n         "},{"path":"data-preprocessing-1.html","id":"data-importation","chapter":"Part 4 Data preprocessing","heading":"4.2 Data importation","text":"dataset provided tables formatted inside text files.","code":""},{"path":"data-preprocessing-1.html","id":"import-species-list","chapter":"Part 4 Data preprocessing","heading":"4.2.1 Import species list","text":"list species provide table contains species names along abbreviation taxonomy (.e. classification organism).","code":"\nspecies_list <- read.delim(\"raw_data/Barents_Sea/SpeciesList_2015.txt\", header = TRUE)\nsp_save <- species_list # keep original copy\nhead(species_list)\n#>           TROPHOSPECIES ABBREVIATION         PHYLUM_SUBPYLUM                   CLASS\n#> 1              DETRITUS      DET_IND                Detritus                Detritus\n#> 2  AUTOTHROPH_FLAGELLAT      AUT_FLA   Autotroph flagellates   Autotroph flagellates\n#> 3        BACTERIA_INDET      BAC_IND            Picoplankton            Picoplankton\n#> 4                DIATOM       DIATOM           Microplankton           Microplankton\n#> 5 HETEROTROPH_FLAGELLAT      HET_FLA Heterotroph flagellates Heterotroph flagellates\n#> 6             ICE_ALGAE      ICE_ALG               Ice algae               Ice algae\n#>                     ORDER                  FAMILY      GROUP\n#> 1                Detritus                Detritus 1_Plankton\n#> 2   Autotroph flagellates   Autotroph flagellates 1_Plankton\n#> 3            Picoplankton            Picoplankton 1_Plankton\n#> 4           Microplankton           Microplankton 1_Plankton\n#> 5 Heterotroph flagellates Heterotroph flagellates 1_Plankton\n#> 6               Ice algae               Ice algae 1_Plankton"},{"path":"data-preprocessing-1.html","id":"import-interactions-list","chapter":"Part 4 Data preprocessing","heading":"4.2.2 Import interactions list","text":"list trophic interactions (.k.. relationships ‘eats ’) provided pairwise list. first column contains identifier.\nconsecutive columns PREDATOR PREY contains species names predator prey, respectively. rows contain relationships predator prey.","code":"\npairwise_list <- read.delim(\"raw_data/Barents_Sea/PairwiseList_2015.txt\", header = TRUE)\npw_save <- species_list # keep original copy\nhead(pairwise_list)\n#>             PWKEY    PREDATOR                  PREY CODE\n#> 1 ACA_SPP-ACA_SPP ACARTIA_SPP           ACARTIA_SPP    2\n#> 2 ACA_SPP-AUT_FLA ACARTIA_SPP  AUTOTHROPH_FLAGELLAT    1\n#> 3  ACA_SPP-DIATOM ACARTIA_SPP                DIATOM    1\n#> 4 ACA_SPP-HET_FLA ACARTIA_SPP HETEROTROPH_FLAGELLAT    1\n#> 5 ACA_SPP-MIX_FLA ACARTIA_SPP MIXOTROPH_FLAGELLATES    4\n#> 6  ACA_SPP-PROZOO ACARTIA_SPP      PROTOZOOPLANKTON    1"},{"path":"data-preprocessing-1.html","id":"import-literature-references","chapter":"Part 4 Data preprocessing","heading":"4.2.3 Import literature references","text":"‘references’ ‘pairwise_to_references’ tables contain metadata interactions.","code":"\nreferences <- read.delim(\"raw_data/Barents_Sea/References_2015.txt\")\npairwise_to_references <- read.delim(\"raw_data/Barents_Sea/Pairwise2References_2015.txt\")"},{"path":"data-preprocessing-1.html","id":"data-cleaning-and-augmentation","chapter":"Part 4 Data preprocessing","heading":"4.3 Data cleaning and augmentation","text":"","code":""},{"path":"data-preprocessing-1.html","id":"species-list","chapter":"Part 4 Data preprocessing","heading":"4.3.1 Species list","text":"","code":""},{"path":"data-preprocessing-1.html","id":"correct-mispelling-and-non-letter-characters","chapter":"Part 4 Data preprocessing","heading":"4.3.1.1 Correct mispelling and non-letter characters","text":"Correct mispelling column names:Correct mispelling species nameIdentify patterns using regular expressions excluding “_” namesCheck patterns need replacingReplace patternsThe organisms names inconsistent contain ASCII strings, slashes, spaces R won’t handle properly.\nreplace .latin name abbreviations associated wrong organism. abbreviations follow international fisheries standards (e.g. GAD_MOR ‘GADUS MORHUA’). can reconstruct abbreviations organisms’ names.","code":"\n\nspecies_list %<>% dplyr::rename(., PHYLUM_SUBPHYLUM = PHYLUM_SUBPYLUM)\n\n# Helper function to apply to each column\nbox::use(box/modify_strings[locate_pattern])\nstrings_to_correct <- locate_pattern(species_list, \"[^0-9a-zA-Z_]\")\n#> NA rows contain the pattern: [^0-9a-zA-Z_] \n#> Column: 1\n#> Column: 2\n#> Column: 3\n#> Column: 4\n#> Column: 5\n#> Column: 6\n#> Column: 7\nprint(strings_to_correct)\n#> [1] \"BERO\\xe8_SP\"                    \"OITHONA_SPINIROSTRIS/ATLANTICA\"\n#> [3] \"Autotroph flagellates\"          \"Heterotroph flagellates\"       \n#> [5] \"Ice algae\"                      \"Mixotroph flagellates\"         \n#> [7] \"Amphipoda/Gammarida\"            \"Amphipoda/Gammaridea\"          \n#> [9] \"Amphipoda/Hyperiidea\"\n# Store the patterns\npatterns <- c(\"\\xe8\", \" \", \"/\")\n\n# Store their replacements\nreplacements <- c(\"E\", \"_\", \"_\")\n\n# Replace the patterns in all columns\nbox::use(box/modify_strings[replace_pattern])\n\nspecies_list <- replace_pattern(x = species_list, vector_pattern = patterns, vector_replacement = replacements )\n#> Replacing '<e8>' with 'E' \n#> Replacing ' ' with '_' \n#> Replacing '/' with '_'\nsp_save <- species_list\n# species_list <- sp_save\n\n# \"(^[A-Za-z]{1,3})\"\n# \"_+([A-Za-z]{1,3})\"\n\nabbr1 <- species_list$TROPHOSPECIES %>% str_extract(., \"(^[A-Za-z]{1,3})\")\nabbr2 <- species_list$TROPHOSPECIES %>% str_extract(., \"(?<=_)([A-Za-z]{1,3})\")\nspecies_list$ABBREVIATION <- paste(abbr1, ifelse(is.na(abbr2), \"IND\", abbr2), sep=\"_\" )"},{"path":"data-preprocessing-1.html","id":"data-augmentation","chapter":"Part 4 Data preprocessing","heading":"4.3.1.2 Data augmentation","text":"Genus + SpeciesWe can extract information ‘trophospecies’ column contains Genus species name. can use Genus additional information classification.N.B. matter know Genus species names . Just know deeper levels taxonomy organism.Genus species grouped ’_’. can split .Finally, can drop column species species different used group information.","code":"\nspecies_list %<>% separate(., col = TROPHOSPECIES, c(\"GENUS\", \"SPECIES\"), \n                           remove = FALSE, extra = \"drop\" )\n#> Warning: Expected 2 pieces. Missing pieces filled with `NA` in 6 rows [1, 4, 7, 10, 80,\n#> 111].\n# Drop SPECIEs\nspecies_list %<>% select(-SPECIES)\n\n# Reorganize the species list to follow the taxonomy\nspecies_list %<>% relocate(GENUS, .after = FAMILY)"},{"path":"data-preprocessing-1.html","id":"list-of-interactions-pairwise-list","chapter":"Part 4 Data preprocessing","heading":"4.4 List of interactions: pairwise list","text":"","code":""},{"path":"data-preprocessing-1.html","id":"data-cleaning","chapter":"Part 4 Data preprocessing","heading":"4.4.1 Data cleaning","text":"purpose analysis, data ‘species_list’ ‘pairwise_list’ need match.\nneed apply cleaning table.","code":""},{"path":"data-preprocessing-1.html","id":"correct-mispellings","chapter":"Part 4 Data preprocessing","heading":"4.4.1.1 Correct mispellings","text":"","code":"\n# debug(locate_pattern)\nbox::use(box/modify_strings[locate_pattern])\n\nbox::use(box/modify_strings[replace_pattern])\n\nstrings_to_correct <- locate_pattern(pairwise_list, \"[^0-9a-zA-Z_-]\")\nprint(strings_to_correct)\npairwise_list <- replace_pattern(x = pairwise_list, vector_pattern = patterns, vector_replacement = replacements )\n\n#### Correct PWKEY\n\"(^[A-Za-z]{1,3})\"\n\"_+([A-Za-z]{1,3})\"\n\n# debug(extract_and_merge)\nextract_and_merge(pairwise_list$PREDATOR, c(\"(^[A-Za-z]{1,3})\", \"_+([A-Za-z]{1,3})_?\"), sep = \"\"   )\n\nbox::use(box/modify_strings[test_extract])\ntest_extract(pairwise_list$PREDATOR, \"_+([A-Za-z]{1,3})(?(_)([A-Za-z]{1,3}))\")"},{"path":"data-preprocessing-1.html","id":"data-transformation","chapter":"Part 4 Data preprocessing","heading":"4.4.2 Data transformation","text":"data provided long pairwise list limiting purpose analysis. can convert list squared binary matrix intersections rows columns contain information interaction.words, ‘0s’ means interaction absent (yet observed nature); ‘1s’ indicates presence interaction organisms listed columns rows interacting.","code":""},{"path":"data-preprocessing-1.html","id":"section","chapter":"Part 4 Data preprocessing","heading":"4.5 ","text":"","code":""},{"path":"data-exploration.html","id":"data-exploration","chapter":"Part 5 Data exploration","heading":"Part 5 Data exploration","text":"","code":""},{"path":"data-analysis.html","id":"data-analysis","chapter":"Part 6 Data analysis","heading":"Part 6 Data analysis","text":"","code":""},{"path":"data-analysis.html","id":"load-dependencies-1","chapter":"Part 6 Data analysis","heading":"6.1 Load dependencies","text":"","code":""}]
